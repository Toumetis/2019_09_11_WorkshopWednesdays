
from sklearn.datasets import load_iris
import pandas as pd
import numpy as np

iris = load_iris()
usage_df = pd.DataFrame(iris.data, columns = iris.feature_names)
usage_df['target'] = iris.target
usage_df.shape
target names: array(['setosa', 'versicolor', 'virginica']
usage_df.target.value_counts()

usage_df.columns = ['0am_8am','8am_2pm','2pm_9pm','9pm_0am','target']

# swap columns to make data more realistic
usage_df = usage_df[['8am_2pm','2pm_9pm','0am_8am','9pm_0am','target']]
usage_df.columns = ['0am_8am','8am_2pm','2pm_9pm','9pm_0am','target']

# add check column
usage_df['total_kwh'] = usage_df[['0am_8am','8am_2pm','2pm_9pm','9pm_0am']].apply(lambda x: x.sum(), axis=1)

# to make it more realistic, we need to get total value to around 6-7kwh per day
# half most measurements
usage_df.iloc[:,0] = round(usage_df.iloc[:,0]*(0.5),1)
#usage_df.iloc[:,1] = round(usage_df.iloc[:,1]*(0.1),1)
usage_df.iloc[:,2] = round(usage_df.iloc[:,2]*(0.5),1)

# update total
usage_df['total_kwh'] = usage_df[['0am_8am','8am_2pm','2pm_9pm','9pm_0am']].apply(lambda x: x.sum(), axis=1)

usage_df.head(2)

usage_df.tail(2)

# check
usage_df.total_kwh.hist();

np.random.choice?

# add some null values

sample_cols = np.random.choice([0,1,2,3],size=10,replace=True)
sample_cols

sample_rows = np.random.choice(usage_df.index,10,replace=False)
sample_rows

locs = list(zip(sample_rows,sample_cols))
locs

for pos in np.arange(len(sample_cols)):
    print(pos)

for item in locs:
    usage_df.loc[item] = np.nan

usage_df.isnull()


